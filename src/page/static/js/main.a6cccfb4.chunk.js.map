{"version":3,"sources":["data/data.js","components/upload/index.js","pages/newAnketa.js","App.js","reportWebVitals.js","pages/addAnketa.js","pages/anketa.js","pages/signin.js","index.js"],"names":["array","UploadFile","props","useState","fileImage","setFileImage","prop","onRemove","file","index","indexOf","newFileList","slice","splice","Item","label","name","rules","required","message","className","status","accept","e","b","setFields","value","onRemoveDiplom","beforeUpload","beforeUploadAdd","title","UploadOutlined","Option","Select","NewAnketa","anketa","fileDiplom","setFileDiplom","beforeUploadDiplom","type","error","content","duration","size","reader","FileReader","onloadend","result","readAsDataURL","Upload","LIST_IGNORE","fotoCurses","setFotoCurses","sel","setSel","beforeUploadCurces","console","log","useEffect","propDiplom","anketaSelect","Form","useForm","form","fields","tailFormItemLayout","wrapperCol","xs","span","offset","sm","lg","layout","labelCol","initialValues","remember","onFinish","values","axios","method","url","Number","data","then","res","info","placeholder","pattern","style","height","width","display","margin","maxLength","addonBefore","Password","format","locale","disabledDate","current","moment","endOf","subtract","showSearch","map","i","noStyle","shouldUpdate","prevValues","currentValues","questionnaire","getFieldValue","min","max","initialvalue","minLength","rows","showCount","valuePropName","validator","_","Promise","resolve","reject","Error","htmlType","App","setMyAnketa","to","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AddAnketa","storedJwt","localStorage","getItem","headers","catch","Anketa","history","useHistory","setName","query","window","location","search","substring","split","setAnketa","typeAnkete","setTypeAnkete","myData","setmyData","optionsWithDisabled","setoptionsWithDisabled","get","user","fullName","first","disabled","questionnaireC3","questionnaireClinicPartner","questionnaireMo","push","tip","toUpperCase","Group","options","target","userItems","Object","entries","setTimeout","elem","dob","validCertificates","dateEnd","specialization","optionType","buttonStyle","ank","textAlign","color","whitespace","SignToProf","phone","setPhone","snils","setSnils","username","replace","password","setItem","token","warn","allowClear","isNaN","test","ReactDOM","render","path","exact","component","newAnketa","document","getElementById"],"mappings":"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","file":"static/js/main.a6cccfb4.chunk.js","sourcesContent":["export let array = [\n    'Акушер-гинеколог',\n    'Аллерголог-иммунолог',\n    'Анестезиолог-реаниматолог',\n    'Ветеринар',\n    'Вирусолог',\n    'Врач клинической лабораторной диагностики',\n    'Врач мануальной терапии',\n    'Врач общей практики',\n    'Врач по авиационной и космической медицине',\n    'Врач по водолазной медицине',\n    'Врач по лечебной физкультуре',\n    'Врач по медико-социальной экспертизе',\n    'Врач по медицинской профилактике',\n    'Врач по медицинской реабилитации',\n    'Врач по общей гигиене',\n    'Врач по паллиативной медицинской помощи',\n    'Врач по радиационной гигиене',\n    'Врач по рентгенэндоваскулярным диагностике и лечению',\n    'Врач по санитарно-гигиеническим лабораторным исследованиям',\n    'Врач по спортивной медицине',\n    'Врач скорой медицинской помощи',\n    'Врач ультразвуковой диагностики',\n    'Врач физической и реабилитационной медицины',\n    'Врач функциональной диагностики',\n    'Гастроэнтеролог',\n    'Гематолог',\n    'Генетик',\n    'Гериатр',\n    'Дерматовенеролог',\n    'Детский кардиолог',\n    'Детский невролог',\n    'Детский онколог',\n    'Детский психиатр',\n    'Детский стоматолог',\n    'Детский уролог-андролог',\n    'Детский хирург',\n    'Детский эндокринолог',\n    'Диабетолог',\n    'Диетолог',\n    'Инфекционист',\n    'Кардиолог',\n    'Кинезотерапевт',\n    'Клинический фармаколог',\n    'Колопроктолог',\n    'Косметолог',\n    'Логопед',\n    'Невролог',\n    'Нейрохирург',\n    'Неонатолог',\n    'Нефролог',\n    'Онколог',\n    'Остеопат',\n    'Оториноларинголог',\n    'Офтальмолог',\n    'Офтальмолог-протезист',\n    'Паразитолог',\n    'Патологоанатом',\n    'Педиатр',\n    'Пластический хирург',\n    'Подростковый психиатр',\n    'Подростковый терапевт',\n    'Профпатолог',\n    'Психиатр',\n    'Психиатр-нарколог',\n    'Психолог',\n    'Психотерапевт',\n    'Пульмонолог',\n    'Радиолог',\n    'Радиотерапевт',\n    'Ревматолог',\n    'Рентгенолог',\n    'Репродуктолог (ЭКО)',\n    'Рефлексотерапевт',\n    'Сексолог',\n    'Семейный врач',\n    'Сердечно-сосудистый хирург',\n    'Стоматолог',\n    'Судебно-медицинский эксперт',\n    'Сурдолог-оториноларинголог',\n    'Терапевт',\n    'Токсиколог',\n    'Торакальный хирург',\n    'Травматолог-ортопед',\n    'Уролог',\n    'Уролог-андролог',\n    'Физиотерапевт',\n    'Фтизиатр',\n    'Химиотерапевт',\n    'Хирург',\n    'Челюстно-лицевой хирург',\n    'Эндокринолог',\n    'Эпидемиолог'];","import 'antd/dist/antd.css';\nimport { UploadOutlined } from '@ant-design/icons';\nimport 'moment/locale/ru';\nimport '../../App.css';\n\n\nimport { Button, Input, Form, Upload } from 'antd';\nimport React, { useState } from 'react';\n\n\nconst UploadFile = (props) => {\n\n    // Стейты для копирования файлов \n    const [fileImage, setFileImage] = useState([])\n    const onRemoveDiplom = (file, b) => {\n        const index = fileImage.indexOf(file);\n        const newFileList = fileImage.slice();\n        newFileList.splice(index, 1);\n        setFileImage(newFileList);\n        props.setFields([{ name: b, value: \"\" }])\n    }\n\n\n\n    //   const beforeUploadAdd = (file, b) => {\n    //     if (file.size > 2000000) {\n    //       message.error({ content: ` Размер ${file.name} больше 2 мб !`, duration: 2 });\n    //     } else {\n    //       var reader = new FileReader();\n    //       reader.onloadend = function () { setFields([{ name: b, value: reader.result }]) };\n    //       reader.readAsDataURL(file);\n    //       console.log(file)\n    //     }\n    //   }\n    //пропсы для отправки файла       \n    const prop = {\n        onRemove: file => {\n            const index = fileImage.indexOf(file);\n            const newFileList = fileImage.slice();\n            newFileList.splice(index, 1);\n            setFileImage(newFileList);\n        }\n    }\n\n    return <>\n        <Form.Item  label={props.label} name={['questionnaire', props.name, 'image']}\n            rules={[{required: true, message:`Пожалуйста выберите файл ${props.label}!`}]}  \n        >\n            <Input className=\"inputFoto\" />\n        \n            <Upload {...prop} status=\"done\"\n                accept=\"image/jpeg\"\n                onRemove={e => onRemoveDiplom(e, ['questionnaire', props.name, 'image'])}\n                beforeUpload={(e) => props.beforeUploadAdd(e, ['questionnaire', props.name, 'image'])}\n            >\n                <Button title=\"Формат jpg, размер не более 2мб\">\n                    <UploadOutlined />\n               Выберите файл\n              </Button>\n            </Upload>\n        </Form.Item>\n    </>\n}\nexport default UploadFile;","import 'antd/dist/antd.css';\nimport locale from 'antd/es/date-picker/locale/ru_RU.js';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport { array } from '../data/data.js';\nimport '../App.css';\nimport axios from 'axios';\nimport { UploadOutlined } from '@ant-design/icons';\n// import { Link } from \"react-router-dom\";\nimport {\n  Button, Input, Form, DatePicker,\n  Select, InputNumber, Checkbox, Upload, message\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport TextArea from 'antd/lib/input/TextArea';\nimport UploadFile from '../components/upload/index.js';\n\n\n\n\nconst { Option } = Select;\n\n\n\nfunction NewAnketa({ anketa }) {\n  \n  //Стейты для копирования файлов \n  const [fileDiplom, setFileDiplom] = useState([])  \n  //предварительная обработка image  Diplom и других одиночных перед отправкой\n  const beforeUploadDiplom = (file, b) => {\n    if (file.type !== 'image/jpeg') {\n      message.error({ content: `${file.name} не  jpg  файл !`, duration: 2 });\n      \n    } else if (file.size > 2000000) {\n      message.error({ content: ` Размер ${file.name} больше 2 мб !`, duration: 2 });\n    } else {\n      var reader = new FileReader();\n      reader.onloadend = function () { \n      setFields([{ name: b, value: reader.result }]);        \n      \n      }; \n      reader.readAsDataURL(file);\n      \n    }\n    return (file.type === 'image/jpeg' || file.size > 2000000) ? true : Upload.LIST_IGNORE;\n  }\n  const onRemoveDiplom = (file,b) => {\n    const index = fileDiplom.indexOf(file);\n    const newFileList = fileDiplom.slice();\n    newFileList.splice(index, 1);\n    setFileDiplom(newFileList);\n    setFields([{ name: b, value: \"\" }])    \n  }\n  const [fotoCurses, setFotoCurses] = useState([])\n  const [sel, setSel] = useState()\n  const beforeUploadCurces = (file, b) => {\n    setSel(b)\n    console.log(sel)\n    if (file.type !== 'image/jpeg') {\n      message.error({ content: `${file.name} не  jpg  файл !`, duration: 2 });\n      onRemoveDiplom(file,b);\n    } else if (file.size > 2000000) {\n      message.error({ content: ` Размер ${file.name} больше 2 мб !`, duration: 2 });\n    } else {\n      var reader = new FileReader();\n      reader.onloadend = function () {       \n        setFotoCurses([...fotoCurses, { \"image\": reader.result }]);     \n        reader.readAsDataURL(file); \n      };\n    }\n    return (file.type === 'image/jpeg' || file.size > 2000000) ? true : Upload.LIST_IGNORE;\n  }\n  useEffect(() => {\n    setFields([{ name: [\"questionnaire\", \"refresherCoursesImages\"], value: fotoCurses }]);\n  }, [fotoCurses])\n  //пропсы для отправки файла\n  \n     \n  const propDiplom = {\n    onRemove: file => {\n      const index = fileDiplom.indexOf(file);\n      const newFileList = fileDiplom.slice();\n      newFileList.splice(index, 1);\n      setFileDiplom(newFileList);\n    }\n  }  \n\n  //список анкет для AXIOS\n  const anketaSelect = ['c3', 'clinic-partner', 'mo']\n \n\n  const [form] = Form.useForm()\n\n  //отправляем анкету на сервер\n  function ResiveAnkete(values) {\n    axios({\n      method: 'post',\n      url: `http://localhost:8099/api/questionnaire/${anketaSelect[Number(anketa) - 1]}`,\n      data: values\n    })\n      .then(res => {\n        message.info({ content: 'Ваша анкета отправлена на модерацию', duration: 2 })\n      })\n    console.log(values);\n  }\n\n  const [fields, setFields] = useState()\n  function disabledDate(current) {\n    // Can not select days before today and today\n    return current && current > moment().endOf('year').subtract(18, 'years');\n  }\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n      lg: { span: 10 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n      lg: { span: 14 }\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n      lg: {\n        span: 14,\n        offset: 10,\n      }\n    },\n  };\n \n  return (\n    <div>\n      <Form\n        layout=\"horizontal\"\n        form={form}\n        {...formItemLayout}\n        fields={fields}\n        initialValues={{ remember: true }}\n        onFinish={ResiveAnkete}        \n      >\n\n        {/* <h2>Анкета для трудоустройства <span>{anketaName}</span></h2> */}\n        {/* <p style={{ textAlign: 'left', color: 'red' }}>* обязательные для заполнения поля</p> */}\n        {anketa !== 1 && <>\n          <Form.Item label=\"Название МО\" name={['questionnaire', 'moName']} \n            rules={[{required: true, message: 'Пожалуйста введите название МО!'}]}          \n          >\n            <Input\n              // required\n              placeholder=\"Название МО\"\n              pattern=\"[-а-яА-ЯёЁ\\s]{3,40}\"\n              title=\"русскими буквами\"\n            />\n          </Form.Item>\n          <p>Далее поля связанные с врачем</p>\n        </>\n        }\n        <h3><b>Общая информация о враче</b></h3>\n        <Form.Item label=\"* ФИО\" \n          layout=\"inline\" \n          style={{ height: 30 }} \n          rules={[{ required: true ,message: 'Введите фамилию'}]}\n        >\n          <Form.Item \n            style={{ width: '30%', display: 'inline-block' }}\n            name={['user', 'fullName', 'last']}\n            rules={[{required: true, message: 'Фамилия'}]}\n          >\n            <Input              \n              title=\"русскими буквами\"\n              required\n              placeholder=\"Фамилия\"\n              pattern=\"[-а-яА-ЯёЁ]{1,15}\"\n            />\n          </Form.Item>\n          <Form.Item name={['user', 'fullName', 'first']}\n            style={{ width: '30%', display: 'inline-block', margin: \"0 5%\" }}\n            rules={[{\n              required: true, message: 'Имя'              \n            }]}\n          >\n            <Input\n              placeholder=\"Имя\"\n              required\n              title=\"русскими буквами\"\n              pattern=\"[-а-яА-ЯёЁ]{2,15}\"\n            />\n          </Form.Item>\n          <Form.Item name={['user', 'fullName', 'middle']}\n            style={{ width: '30%', display: 'inline-block' }}\n            rules={[{ required: true, message: 'Отчество' }]}\n          >\n            <Input\n              required\n              title=\"русскими буквами\"\n              placeholder=\"Отчество\"\n              pattern=\"[-а-яА-ЯёЁ]{3,15}\"\n            />\n          </Form.Item>\n        </Form.Item>\n        <Form.Item label=\"Email\" name={['user', 'email']}\n          rules={[{ required: true, message: 'Введите валидный email' }]}\n        >\n          <Input\n            placeholder=\"example@gmail.com\"\n            required\n            pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n        </Form.Item>        \n        <Form.Item label=\"Телефон\" name={['user', 'phone']}\n          rules={[{ required: true, \n          message: 'Введите ваш телефон в формате: 11 цифр без пробелов и тире' }]}\n        > \n          <Input\n            placeholder=\"XXXXXXXXXX\"            \n            title=\"10 цифр без пробелов и тире\"\n            maxLength={10}\n            addonBefore=\"+7\"           \n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{2}[0-9]{2}\"\n          />\n        </Form.Item>\n        <Form.Item label=\"Снилс\" name={['user', 'insuranceNumber']}\n          rules={[{ required: true, message: 'Введите ваш СНИЛС' }]}\n        >\n          <Input.Password\n            placeholder=\"ХХХХХХХХХХХ\"\n            maxLength={11}\n            title=\"11 цифр без пробелов и тире\"\n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{3}[0-9]{2}\"\n          />\n        </Form.Item>\n        <Form.Item label=\"Город проживания\" name={['user', 'city']}\n          rules={[{ required: true, message: 'Введите город проживания' }]}\n        >\n          <Input\n            title=\"русскими буквами\"\n            placeholder=\"Город проживания\"\n            pattern=\"[а-яёА-ЯЁ]{1,15}\"\n          />\n        </Form.Item>\n        {anketa !== 3 ?\n          <Form.Item label=\"Дата рождения\" name={['questionnaire', 'dob']}\n            rules={[{ required: true, message: 'Выберите дату рождения' }]}\n          >\n            <DatePicker placeholder=\"Дата рождения\"\n              format=\"YYYY-MM-DD\" locale={locale}\n              disabledDate={disabledDate}\n            />\n          </Form.Item> : \"\"\n        }\n        {anketa !== 3 ?\n          <Form.Item label=\"Основная специальность\" name={['questionnaire', 'mainSpecialty']}\n            rules={[{ required: true, message: 'Введите основную специальность' }]}\n          >\n            <Select\n              showSearch\n              pattern=\"[а-яёА-ЯЁ-]{1,35}\"\n              placeholder=\"Выберите специальность\"\n            >\n              {array.map(i => <Option key={i} value={i}>{i}</Option>)}\n\n            </Select>\n          </Form.Item> : \"\"}\n\n        {anketa === 3 ?\n          <Form.Item label=\" Cпециальность\" name={['questionnaire', 'specialty']}\n            rules={[{ required: true, message: 'Введите  специальность' }]}\n          >\n            <Select\n              showSearch\n              pattern=\"[а-яёА-ЯЁ-]{1,35}\"\n              placeholder=\"Выберите специальность\"\n            >\n              {array.map(i => <Option value={i}>{i}</Option>)}\n\n            </Select>\n          </Form.Item> : \"\"}\n        {anketa !== 3 ? <>\n          <Form.Item label=\"Дополнительная специальность\" name={['questionnaire', 'additionalSpecialty']}>\n            <Input\n              placeholder=\"Дополнительная специальность\"\n              pattern=\"[а-яёА-ЯЁ-]{1,35}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Специализация\" name={['questionnaire', 'specialization']}>\n            <Input              \n              pattern=\"[-а-яёА-ЯЁ,-. ]{1,}\"\n              title=\"На лечении каких болезней специализируется врач\"\n              placeholder=\"Специализация\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Какой ведете прием\"\n            name={['questionnaire', 'physicianAppointment', 'type']}\n            rules={[{ required: true, message: 'Выберите тип приема' }]}\n          >\n            <Select placeholder=\"Вид приема\">\n              <Option value={1}>Детский</Option>\n              <Option value={2}>Взрослый</Option>\n            </Select>\n          </Form.Item>\n         \n          <Form.Item noStyle\n            shouldUpdate={(prevValues, currentValues) => prevValues.questionnaire !== currentValues.questionnaire}\n          >\n            {({ getFieldValue }) => \n                   getFieldValue(['questionnaire', 'physicianAppointment', 'type']) === 1 ? (                       \n                  <Form.Item label=\"C какого возвраста\"                   \n                    name={['questionnaire', 'physicianAppointment', 'patientAge']}\n                    rules={[{ required: true }]}\n                                                    \n                  >                \n                    <InputNumber                   \n                      min={1}\n                      max={20}\n                      placeholder=\"Возвраст\"\n                      title=\"для детского приема\"\n                      initialvalue={1}\n                    />\n                  </Form.Item> \n                ) : null\n              }\n          </Form.Item>\n        </> : null}\n        \n        <Form.Item label=\"Год начала врачебной практики\"\n          name={['questionnaire', 'startMedicalPractice']}\n          rules={[{required: true, message: 'Введите год'}]}\n        >\n          <InputNumber\n            initialvalue={1970}\n            placeholder=\"Год\"\n            maxLength={4}\n            min={1970}\n            max={2021}\n          />\n        </Form.Item>\n        \n        {anketa === 3 ? <>\n          <h3><b>Действительный сертификат по специальности</b></h3>\n          <Form.Item label=\"Специальность\" name={['questionnaire', 'validCertificates', 'specialization']}\n            rules={[{ required: true, message: 'Добавить сертификат' }]}\n          >\n            <Input\n              placeholder=\"Специальность\"\n              pattern=\"[а-яА-ЯёЁ,- ]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Дата окончания\" \n            name={['questionnaire', 'validCertificates', 'dateEnd']}\n            rules={[{ required: true }]}\n          >\n            <DatePicker \n              placeholder=\"Дата окончания\"\n              format=\"YYYY-MM-DD\" locale={locale}\n              initialValues={moment('2015-01-01', \"YYYY-MM-DD\")} />\n          </Form.Item>          \n          <UploadFile            \n           label=\"Фото сертификата\" \n           name=\"validCertificatesImage\" \n           beforeUploadAdd={beforeUploadDiplom}\n           setFields={setFields}         \n          />          \n          <Form.Item label=\"Расписание работы\" name={['questionnaire', 'workSchedule']}>\n            <Input\n              placeholder=\"Расписание работы\"\n              pattern=\"[а-я,А-Я0-9- ]{1,}\"\n            />\n          </Form.Item>  </>\n          : null\n        }\n        {anketa !== 3 ? <>\n          <h3><b>Базовое образование</b></h3>\n          <Form.Item label=\"Год окончания\"\n            rules={[{ required: true, message: 'Добавить год окончания' }]}\n            name={['questionnaire', 'basicEducation', 'yearStart']}\n          >\n            <InputNumber\n              initialvalue={1970}\n              placeholder=\"Год\"\n              maxLength={4}\n              min={1970}\n              max={2021}\n            />\n          </Form.Item>\n          <Form.Item label=\"Название учреждения\"\n            rules={[{ required: true, message: 'Добавить название учреждения' }]}\n            name={['questionnaire', 'basicEducation', 'institutionName']}\n          >\n            <Input\n              placeholder=\"Название учреждения\"\n              pattern=\"[а-я А-Я]{1,15}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Специализация\"\n            rules={[{ required: true, message: 'Добавить специализацию' }]}\n            name={['questionnaire', 'basicEducation', 'specialization']}\n          >\n            <Input\n              placeholder=\"Специализация\"\n              pattern=\"[а-я А-Я]{1,15}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Город\" name={['questionnaire', 'basicEducation', 'city']}\n            rules={[{ required: true, message: 'Добавить город' }]}\n          >\n            <Input\n              placeholder=\"Город\"\n              pattern=\"[а-я-А-ЯёЁ]{1,15}\"\n            />\n          </Form.Item>\n          <Form.Item className=\"inputFoto\" name={['questionnaire', 'diploma', 'image']}>\n          <Input />\n        </Form.Item>\n        <UploadFile            \n          label=\"Фото диплома\" \n          name=\"diploma\" \n          beforeUploadAdd={beforeUploadDiplom}\n          setFields={setFields}         \n        />       \n          <h3><b>Интернатура/Ординатура</b></h3>\n          <Form.Item label=\"Год окончания\"           \n            name={['questionnaire', 'internshipTraineeship', 'yearEnd']}>\n            <InputNumber\n              initialvalue={1970}\n              placeholder=\"Год\"\n              maxLength={4}\n              min={1970}\n              max={2021}\n            />\n          </Form.Item>\n          <Form.Item label=\"Название учреждения\" name={['questionnaire', 'internshipTraineeship', 'institutionName']}>\n            <Input\n              placeholder=\"Название учреждения\"\n              pattern=\"[-а-яА-ЯёЁ №]{1,15}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Специализация\" name={['questionnaire', 'internshipTraineeship', 'specialization']}>\n            <Input\n              placeholder=\"Специализация\"\n              pattern=\"[а-я-А-ЯёЁ]{1,15}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Город\" name={['questionnaire', 'internshipTraineeship', 'city']}>\n            <Input\n              placeholder=\"Город\"\n              pattern=\"[-а-яА-ЯёЁ]{3,25}\"\n            />\n          </Form.Item>\n          <h3><b>Аспирантура/Докторантура</b></h3>\n          <Form.Item label=\"Год окончания\" name={['questionnaire', 'graduateSchoolDoctorate', 'yearEnd']}>\n            <InputNumber\n              min={1970}\n              placeholder=\"Год\"\n              maxLength={4}\n              max={2020}\n            />\n          </Form.Item>\n          <Form.Item label=\"Название учреждения\" name={['questionnaire', 'graduateSchoolDoctorate', 'institutionName']}>\n            <Input\n              placeholder=\"Название учреждения\"\n              pattern=\"[-а-яА-ЯёЁ №]{1,15}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Специализация\" name={['questionnaire', 'graduateSchoolDoctorate', 'specialization']}>\n            <Input\n              placeholder=\"Специализация\"\n              pattern=\"[-а-яА-ЯёЁ ]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Город\" name={['questionnaire', 'graduateSchoolDoctorate', 'city']}>\n            <Input\n              placeholder=\"Город\"\n              pattern=\"[-а-яА-ЯёЁ]{1,15}\"\n            />\n          </Form.Item>\n          <h3><b>Действующие сертификаты</b></h3>\n          <Form.Item label=\"Сертификат\" name={['questionnaire', 'validCertificates', 'specialization']}\n            rules={[{ required: true, message: 'Добавить сертификат' }]}\n          >\n            <Input\n              placeholder=\"Название сертификата\"\n              pattern=\"[а-яА-Я]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Дата окончания\" name={['questionnaire', 'validCertificates', 'dateEnd']}\n            rules={[{ required: true , message: 'Дата окончания' }]}\n          >\n            <DatePicker placeholder=\"Дата окончания\"\n              format=\"YYYY-MM-DD\" locale={locale}\n            />\n          </Form.Item>\n          <Form.Item label=\"Фото сертификата\" name={['questionnaire', 'validCertificatesImage']}\n            rules={[{ required: true, message: 'Добавить сертификат'}]}\n          >\n            <Input className=\"inputFoto\"/>\n         \n            \n         \n            <Upload {...propDiplom} status=\"done\"\n              accept=\"image/jpeg\"\n              beforeUpload={(e) => beforeUploadDiplom(e, ['questionnaire', 'validCertificatesImage', 'image'])}\n            >\n              <Button><UploadOutlined />Выберите файл</Button>\n            </Upload>\n          </Form.Item>          \n          <h3><b>Курсы повышения квалификации,семинары, мастерклассы</b></h3>\n          <Form.Item label=\"Год окончания\" name={['questionnaire', 'refresherCourses', 'yearEnd']}>\n            <InputNumber\n              placeholder=\"Год\"\n              pattern=\"[0-9]{1,}\"\n              min={1970}\n              max={2021}\n              maxLength={4}\n              minLength={4}\n            />\n          </Form.Item>\n          <Form.Item label=\"Наименования курсов\" name={['questionnaire', 'refresherCourses', 'courseName']}>\n            <Input\n              placeholder=\"Наименование курсов\"\n              pattern=\"[0-9а-яА-Я\\s]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Наименование учреждения\" name={['questionnaire', 'refresherCourses', 'institutionName']}>\n            <Input\n              placeholder=\"Наименование учреждения\"\n              pattern=\"[-а-яА-Я,0-9№\\s]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Специальность\" name={['questionnaire', 'refresherCourses', 'specialization']}>\n            <Input\n              placeholder=\"Специальность\"\n              pattern=\"[а-яА-ЯёЁ ,-\\s]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Фото курсов\" name={['questionnaire', 'refresherCoursesImages']} >\n            <Input className=\"inputFoto\"/>         \n            <Upload {...propDiplom} status=\"done\" \n              accept=\"image/jpeg\"\n              beforeUpload={(e) => beforeUploadCurces(e, ['questionnaire', 'refresherCoursesImages'])}\n            >\n              <Button><UploadOutlined />Выберите файл</Button>\n            </Upload>\n          </Form.Item>\n          <Form.Item label=\"Врачебная категория\" name={['questionnaire', 'medicalCategory']}>\n            <Input\n              placeholder=\"Врачебная категория\"\n              pattern=\"[а-я-,.А-ёЁ]{1,25}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Ученая степень\" name={['questionnaire', 'academicDegree']}>\n            <Input\n              placeholder=\"Ученая степень\"\n              pattern=\"[а-яА-ЯёЁ,-]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Членство в профессиональных организациях\" name={['questionnaire', 'tradeUnionMembership']}>\n            <Input\n              placeholder=\"Наименование организации\"\n              pattern=\"[а-яА-Я]{1,50}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Опыт работы\" name={['questionnaire', 'experience']}>\n            <TextArea rows={7} showCount maxLength={1000}\n              placeholder=\"Год начала, год окончания, наименование организации, специальность\"\n              pattern=\"[а-яА-ЯёЁ,- \\s]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Награды\" name={['questionnaire', 'awards']}>\n            <Input\n              placeholder=\"Награды\"\n              pattern=\"[а-яА-ЯёЁ ,-\\s]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Фиксированные достижения\" name={['questionnaire', 'fixedAchievements']}>\n            <Input\n              placeholder=\"Фиксированные достижения\"\n              pattern=\"[а-яА-ЯёЁ, \\s]{1,}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Научная деятельность\" name={['questionnaire', 'scientificActivity']}>\n            <Input\n              placeholder=\"Научная деятельность\"\n              pattern=\"[а-яА-ЯёЁ, \\s]{1,}\"\n            />\n          </Form.Item>\n        </> : null}\n        <Form.Item label=\"Описание\" name={['questionnaire', 'description']}>\n          <TextArea rows={5} showCount maxLength={1000}\n            placeholder=\"Научная деятельность и прочие заслуги\"\n            title=\"не более 1000 символов\"\n            pattern=\"[а-яА-ЯёЁ, -\\s]{1,}\"\n          />\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}\n          name=\"agreement\"\n          valuePropName=\"checked\"\n          rules={[\n            {\n              validator: (_, value) =>\n                value ? Promise.resolve() : Promise.reject(new Error('Необходимо принять соглашение')),\n            },\n          ]}\n        >\n          <Checkbox>Согласен на обработку персональных данных</Checkbox>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Сохранить\n            </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\nexport default NewAnketa;","import 'antd/dist/antd.css';\nimport './App.css';\nimport { Select } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport NewAnketa from './pages/newAnketa';\nimport { useState } from 'react';\nconst { Option } = Select;\nfunction App() {\n  const [anketa, setMyAnketa] = useState(0);\n  const setAnketa = (value) => setMyAnketa(value);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" />\n      <br />\n      <h1>Анкетирование врачей</h1>\n      <br />\n      <p>\n        <Link to=\"/signToprof\">Я уже заполнял форму</Link>\n      </p>\n      <hr />\n      <br />\n      <p>\n        Для начала выберите анкету для заполнения, потом это изменить будет нельзя.\n        Есть три варианта анкетирования, все они зависят от типа договора заключаемого с СЗ.\n      </p>\n      <Select style={{ width: '100%', margin: '20px 0' }} onChange={setAnketa}\n        placeholder=\"Выберите анкету для заполнения\">\n        <Option  value={1}>Анкета при трудоустройстве в СберЗдоровье</Option>\n        <Option  value={2}>Анкета при подключении врача из клиники партнера</Option>\n        <Option  value={3}>Анкета при подключении врача из регионального МО (для РГС)</Option>\n      </Select>\n      {anketa !== 0 && < NewAnketa anketa={anketa} />}\n    </div>\n  );\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.css';\n\nimport 'moment/locale/ru';\nimport '../App.css';\nimport axios from 'axios';\n\nimport {Button,  Form,  message, Checkbox, Upload } from 'antd';\nimport React, { useState } from 'react';\nimport UploadFile from '../components/upload';\n\n\nconst AddAnketa = () => {\n  // let history = useHistory()\n  // Токен\n  const storedJwt = localStorage.getItem('token')\n  // // Стейты для копирования файлов \n  // const [fileImage, setFileImage] = useState([])\n  const [fields, setFields] = useState()\n  const [form] = Form.useForm()\n  \n //отправляем анкету на сервер\n function ResiveAddAnkete(values) {\n  if (storedJwt) {\n    axios({\n      method: 'PATCH',\n      url: 'http://localhost:8099/api/questionnaire/update/additional',\n      data: values,\n      headers: {\n        'Access-Control-Allow-Headers': 'Access-Control-Allow-Credentials,Access-Control-Allow-Origin,Access-Control-Allow-Method,Content-Type,Accept,Authorization',\n        'Authorization': `Bearer ${storedJwt}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Method': 'PATCH',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': 'true',          \n        'Accept': 'application/json',\n      }\n    })\n    .then(res => {\n      message.info({ content: 'Ваша анкета изменена ', duration: 2 })\n    })\n    .catch(error => console.log(error))\n  } else {\n    axios({\n      method: 'post',\n      url: 'http://localhost:8099/api/questionnaire/additional',\n      data: values\n    })\n      .then(res => {\n        message.info({ content: 'Ваша анкета отправлена на модерацию', duration: 2 })\n      })\n    console.log(values);\n  }\n\n}  \n  const beforeUploadAdd = (file, b) => {\n    if (file.size > 2000000) {\n      message.error({ content: ` Размер ${file.name} больше 2 мб !`, duration: 2 });\n    } else {\n      var reader = new FileReader();\n      reader.onloadend = function () { setFields([{ name: b, value: reader.result }]) };\n      reader.readAsDataURL(file);\n      console.log(file)\n    }\n    return  file.size > 2000000 ? true : Upload.LIST_IGNORE;\n  }\n  //пропсы для отправки файла       \n  // const prop = {\n  //   onRemove: file => {\n  //     const index = fileImage.indexOf(file);\n  //     const newFileList = fileImage.slice();\n  //     newFileList.splice(index, 1);\n  //     setFileImage(newFileList);\n  //   }\n  // }\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n      lg: { span: 10 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n      lg: { span: 14 }\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n      lg: {\n        span: 14,\n        offset: 10,\n      }\n    },\n  };\n\n  return (\n    <Form \n      layout=\"horizontal\"\n      form={form}\n      {...formItemLayout}\n      fields={fields}\n      initialValues={{ remember: true }}\n      onFinish={ResiveAddAnkete}\n    > \n      <h3 style={{margin:\"20px 0\"}}><b>Дозаполнение данных для 2-го этапа</b></h3>      \n      <UploadFile \n        label=\"Фото всех страниц медкнижки\" \n        name=\"medicalBook\" \n        beforeUploadAdd={beforeUploadAdd}\n        setFields={setFields}\n      />\n       <UploadFile \n        label=\"Фото военного билета\" \n        name=\"militaryId\" \n        beforeUploadAdd={beforeUploadAdd}\n        setFields={setFields}\n      />\n      <UploadFile \n        label=\"Заключение профпатолого\" \n        name=\"conclusionOccupationalPathologist\" \n        beforeUploadAdd={beforeUploadAdd}\n        setFields={setFields}\n      />\n      <UploadFile \n        label=\"Заключение нарколога\" \n        name=\"conclusionNarcologist\" \n        beforeUploadAdd={beforeUploadAdd}\n        setFields={setFields}\n      />\n      <UploadFile \n        label=\"Заключение психиатра\" \n        name=\"conclusionPsychiatrist\" \n        beforeUploadAdd={beforeUploadAdd}\n        setFields={setFields}\n      />\n      <UploadFile \n        label=\"Ваше фото\" \n        name=\"userPhoto\" \n        beforeUploadAdd={beforeUploadAdd}\n        setFields={setFields}\n      />      \n      <span className=\"addAnketaText\" >\n        <b>Фото</b> в анфас, белый медицинский халат,\n        лицо хорошо видно , голова/плечи не срезаны - силуэт хорошо виден\n        полностью, размер минимум 400*400 пикселей, не более 2мб,\n        цветная фотография\n      </span>      \n      <Form.Item {...tailFormItemLayout}\n            name=\"agreement\"\n            valuePropName=\"checked\"\n            rules={[\n              {\n                validator: (_, value) =>\n                  value ? Promise.resolve() : Promise.reject(new Error('Вы должны принять соглашение')),\n              },\n            ]}\n          >\n            <Checkbox>Согласен на обработку персональных данных</Checkbox>\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Сохранить\n            </Button>\n          </Form.Item>\n  </Form>)\n}\nexport default AddAnketa;","import 'antd/dist/antd.css';\nimport locale from 'antd/es/date-picker/locale/ru_RU.js';\nimport moment from 'moment';\nimport { UploadOutlined } from '@ant-design/icons';\nimport 'moment/locale/ru';\nimport '../App.css';\nimport axios from 'axios';\nimport { array } from '../data/data.js';\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Button, Input, Form, Radio, DatePicker,\n  Select, Card, InputNumber, Checkbox, Upload, message, Spin\n} from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport TextArea from 'antd/lib/input/TextArea';\nimport AddAnketa from './addAnketa';\n\n\n\nconst { Option } = Select;\n\n\n\nfunction Anketa(props) {\n  // for routing\n  let history = useHistory()\n  // Токен\n  const storedJwt = localStorage.getItem('token');\n  // User's name\n  const [name, setName] = useState(\"\")\n  // расшифровка запроса на анкету\n  const query = window.location.search.substring(1).split(\"=\")[1]\n  // // Стейты для копирования файлов \n  const [fileDiplom, setFileDiplom] = useState([])\n\n  //предварительная обработка image  Diplom и других одиночных перед отправкой\n  const beforeUploadDiplom = (file, b) => {\n    if (file.type !== 'image/jpeg') {\n      message.error({ content: `${file.name} не  jpg  файл !`, duration: 2 });\n    } else if (file.size > 2000000) {\n      message.error({ content: ` Размер ${file.name} больше 2 мб !`, duration: 2 });\n    } else {\n      var reader = new FileReader();\n      reader.onloadend = function () { setFields([{ name: b, value: reader.result }]) };\n      reader.readAsDataURL(file);\n      console.log(file)\n    }\n  }\n  const [fotoCurses, setFotoCurses] = useState([])\n  const [sel, setSel] = useState()\n  const beforeUploadCurces = (file, b) => {\n    setSel(b)\n    console.log(sel)\n    if (file.type !== 'image/jpeg') {\n      message.error({ content: `${file.name} не  jpg  файл !`, duration: 2 });\n    } else if (file.size > 2000000) {\n      message.error({ content: ` Размер ${file.name} больше 2 мб !`, duration: 2 });\n    } else {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        // const newImage = {\"image\": reader.result };\n        setFotoCurses([...fotoCurses, { \"image\": reader.result }]);\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  useEffect(() => {\n    setFields([{ name: [\"questionnaire\", \"refresherCoursesImages\"], value: fotoCurses }]);\n  }, [fotoCurses])\n  //пропсы для отправки файла       \n  const propDiplom = {\n    onRemove: file => {\n      const index = fileDiplom.indexOf(file);\n      const newFileList = fileDiplom.slice();\n      newFileList.splice(index, 1);\n      setFileDiplom(newFileList);\n    }\n  }\n  const [anketa, setAnketa] = useState(\"\")\n  // данные анкеты\n  //Выбор анкеты для редактирования\n  const [typeAnkete, setTypeAnkete] = useState(0)\n  const [form] = Form.useForm()\n  const [fields, setFields] = useState()\n  // определяем имя анкеты для заглавия\n  // const anketaName = typeAnkete === 1 ?\n  //   \"в Сбер Здоровье\" : typeAnkete === 2 ?\n  //     \"врача из клиники партнера\" : typeAnkete === 3 ?\n  //       \"врача из регионального МО (для РГС)\" : \"\"\n\n\n  //список анкет для AXIOS\n  const anketaSelect = ['c3', 'clinic-partner', 'mo']\n  //номер анкеты для отправки\n\n  const [myData, setmyData] = useState({})\n  useEffect(() => setAnketa(query), [query])\n\n  const selectAnkete = e => {\n    setTypeAnkete(e.target.value);\n    if (e.target.value === 4) { return null } else {\n      const userItems = Object.entries(myData.user);\n      console.log(myData);\n      setTimeout(() => {\n        for (const i of userItems) {\n          setFields([{ name: ['user', [i[0]]], value: i[1] }]);\n        }\n\n\n\n\n        const items = Object.entries(myData.questionnaireC3);\n        for (const [i, elem] of items) {\n          if (i === 'dob') {\n            setFields([{ name: ['questionnaire', 'dob'], value: moment(myData.questionnaireC3.dob, 'YYYY-MM-DD') }])\n          } else if (i === 'validCertificates') {\n            setFields([{ name: ['questionnaire', 'validCertificates', 'dateEnd'], value: moment(myData.questionnaireC3.validCertificates.dateEnd, 'YYYY-MM-DD') }]);\n            setFields([{ name: ['questionnaire', 'validCertificates', 'specialization'], value: myData.questionnaireC3.validCertificates.specialization }])\n          } else {\n            setFields([{ name: ['questionnaire', i], value: elem }])\n          }\n          console.log(i)\n        }\n      }, 500);\n    };\n  }\n\n  const [optionsWithDisabled, setoptionsWithDisabled] = useState([])\n\n\n\n  // принимаем анкету с сервера \n\n  useEffect(() => {\n    axios.get('http://localhost:8099/api/user/info',\n      {\n        headers: {\n          'Access-Control-Allow-Headers': 'Access-Control-Allow-Credentials,Access-Control-Allow-Origin,Access-Control-Allow-Method,Content-Type,Accept,Authorization',\n          'Authorization': `Bearer ${storedJwt}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Method': 'GET',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Credentials': 'true',\n          'Accept': 'application/json',\n        }\n      }\n    )\n      .then(res => {\n        setmyData(res.data)\n        console.log(res.data)\n        setName(res.data.user.fullName.first)\n        setoptionsWithDisabled([\n          { label: 'в Сбер здоровье', disabled: !res.data.questionnaireC3, value: 1 },\n          { label: 'врача из клиники партнера', disabled: !res.data.questionnaireClinicPartner, value: 2 },\n          { label: 'врача из регионального МО (для РГС)', disabled: !res.data.questionnaireMo, value: 3 },\n          { label: 'дополнительная анкета', value: 4 }\n        ])\n\n      })\n      .catch(error => history.push(`/signToprof`))\n  }, [storedJwt, history])\n  //отправляем анкету на сервер\n  function ResiveAnkete(values) {\n    const ank = anketaSelect[typeAnkete - 1];\n    console.log(typeAnkete);\n    axios({\n      method: 'PATCH',\n      url: `http://localhost:8099/api/questionnaire/update/${ank}`,\n      data: values,\n      headers: {\n        'Access-Control-Allow-Headers': 'Access-Control-Allow-Credentials,Access-Control-Allow-Origin,Access-Control-Allow-Method,Content-Type,Accept,Authorization',\n        'Authorization': `Bearer ${storedJwt}`,\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Method': 'PATCH',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': 'true',\n        'Accept': 'application/json',\n      }\n    })\n      .then(res => {\n        message.info({ content: 'Ваша анкета изменена ', duration: 2 })\n      })\n      .catch(error => history.push(`/signToprof`))\n\n  }\n  // useEffect(() => {\n  //   if (query.length > 1) { setTypeAnkete(\"0\") } else { setTypeAnkete(query) }\n  // }, [query])\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n      lg: { span: 10 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n      lg: { span: 14 }\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n      lg: {\n        span: 16,\n        offset: 8,\n      }\n    },\n  };\n  return (\n    <div >\n\n      <Link to=\"/\" className=\"App-header\" title=\"на главную\">\n        <header className=\"App-header\" />\n      </Link>\n\n      { !myData ? <Spin tip=\"Загружается анкета...\" /> : null}\n\n      { myData &&\n        <Card title={`Здравствуйте ${name.toUpperCase()}. Выберите анкету для редактирования`}>\n          <Radio.Group\n            options={optionsWithDisabled}\n            onChange={selectAnkete}\n            size=\"large\"\n            value={typeAnkete}\n            optionType=\"button\"\n            buttonStyle=\"solid\"\n          />\n        </Card>\n      }\n\n      { (typeAnkete !== 0 && typeAnkete !== 4) ?\n        <Form\n          layout=\"horizontal\"\n          form={form}\n          {...formItemLayout}\n          fields={fields}\n          initialValues={{ remember: true }}\n          onFinish={ResiveAnkete}\n        >\n\n\n          <p style={{ textAlign: 'left', color: 'red' }}>* обязательные для заполнения поля</p>\n\n          {(typeAnkete !== 1 && typeAnkete !== 4) &&\n            <Form.Item name={['questionnaire', 'moName']} label=\"Название МО\"\n              rules={[{\n                required: true, message: 'Пожалуйста введите название МО!',\n                whitespace: true\n              }\n              ]}\n            >\n              <Input\n                required\n                placeholder=\"название мо\"\n                pattern=\"[-а-яА-ЯёЁ\\s]{3,40}\"\n                title=\"русскими буквами\"\n              />\n            </Form.Item>\n          }\n          <h3><b>Общая информация о враче</b></h3>\n          <Form.Item label=\"* ФИО\" layout=\"inline\" style={{ height: 30 }} rules={[{ required: true }]}>\n            <Form.Item style={{ width: '30%', display: 'inline-block' }}\n              name={['user', 'fullName', 'last']}\n              rules={[{\n                required: true, message: 'Пожалуйста введите фамилию!',\n                whitespace: false\n              }]}\n            >\n              <Input\n                required\n                title=\"русскими буквами\"\n                placeholder=\"Фамилия\"\n                pattern=\"[-а-яА-ЯёЁ]{1,15}\"\n              />\n            </Form.Item>\n            <Form.Item name={['user', 'fullName', 'first']}\n              style={{ width: '30%', display: 'inline-block', margin: \"0 5%\" }}\n              rules={[{\n                required: true, message: 'Имя',\n                whitespace: false\n              }]}\n            >\n              <Input\n                placeholder=\"Имя\"\n                required\n                title=\"русскими буквами\"\n                pattern=\"[-а-яА-ЯёЁ]{2,15}\"\n              />\n            </Form.Item>\n            <Form.Item name={['user', 'fullName', 'middle']}\n              style={{ width: '30%', display: 'inline-block' }}\n              rules={[{ required: true, message: 'Отчество' }]}\n            >\n              <Input\n                required\n                title=\"русскими буквами\"\n                placeholder=\"Отчество\"\n                pattern=\"[-а-яА-ЯёЁ]{3,15}\"\n              />\n            </Form.Item>\n          </Form.Item>\n          <Form.Item label=\"Email\" name={['user', 'email']}\n            rules={[{ required: true, message: 'Введите валидный email' }]}\n          >\n            <Input\n              placeholder=\"Email\"\n              required\n              pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Телефон\" name={['user', 'phone']}\n            rules={[{ required: true, message: 'Введите ваш телефон в формате: 11 цифр без пробелов и тире!' }]}\n\n          >\n            <Input\n              placeholder=\"XXXXXXXXXX\"\n              title=\"11 цифр без пробелов и тире\"\n              maxLength={11}\n              addonBefore=\"+7\"\n              pattern=\"[7][0-9]{3}[0-9]{3}[0-9]{2}[0-9]{2}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Снилс\" name={['user', 'insuranceNumber']}\n            rules={[{ required: true, message: 'Введите ваш СНИЛС' }]}\n          >\n            <Input.Password\n              placeholder=\"ХХХХХХХХХХХ\"\n              maxLength={11}\n              title=\"11 цифр без пробелов и тире\"\n              pattern=\"[0-9]{3}[0-9]{3}[0-9]{3}[0-9]{2}\"\n            />\n          </Form.Item>\n          <Form.Item label=\"Город проживания\" name={['user', 'city']}\n            rules={[{ required: true, message: 'Введите город проживания' }]}\n          >\n            <Input\n              title=\"русскими буквами\"\n              placeholder=\"Город проживания\"\n              pattern=\"[а-яёА-ЯЁ]{1,15}\"\n            />\n          </Form.Item>\n          {anketa !== 3 ?\n            <Form.Item label=\"Дата рождения\" name={['questionnaire', 'dob']}\n              rules={[{ required: true, message: 'Выберите дату рождения' }]}\n            >\n              <DatePicker placeholder=\"Дата рождения\"\n                format=\"YYYY-MM-DD\" locale={locale}\n              />\n            </Form.Item> : \"\"\n          }\n\n          <Form.Item label=\"Основная специальность\" name={['questionnaire', 'mainSpecialty']}\n            rules={[{ required: true, message: 'Введите основную специальность' }]}\n          >\n            <Select\n              showSearch\n              pattern=\"[а-яёА-ЯЁ-]{1,35}\"\n              placeholder=\"Выберите специальность\"\n            >\n              {array.map(i => <Option value={i}>{i}</Option>)}\n\n            </Select>\n          </Form.Item>\n          {anketa !== 3 ?\n            <Form.Item label=\"Дополнительная специальность\" name={['questionnaire', 'additionalSpecialty']}>\n              <Input\n                placeholder=\"Дополнительная специальность\"\n                pattern=\"[а-яёА-ЯЁ]{1,15}\"\n              />\n            </Form.Item> : null\n          }\n          <Form.Item label=\"Специализация\" name={['questionnaire', 'specialization']}>\n            <Input\n              placeholder=\"Специализация\"\n              pattern=\"[а-яёА-ЯЁ]{1,25}\"\n            />\n          </Form.Item>\n          {typeAnkete !== 3 ? <>\n\n            <Form.Item label=\"Какой ведете прием\"\n              name={['questionnaire', 'physicianAppointment', 'type']}\n              rules={[{ required: true, message: 'Выберите тип приема' }]}\n            >\n              <Select style={{ textAlign: 'left' }} placeholder=\"Вид приема\">\n                <Option style={{ textAlign: 'left' }} value={1} >Детский</Option>\n                <Option style={{ textAlign: 'left' }} value={2} >Взрослый</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item noStyle\n              shouldUpdate={(prevValues, currentValues) => prevValues.questionnaire !== currentValues.questionnaire}\n            >\n              {({ getFieldValue }) =>\n                getFieldValue(['questionnaire', 'physicianAppointment', 'type']) === 1 ?\n                  <Form.Item label=\"C какого возвраста\" \n                    name={['questionnaire', 'physicianAppointment', 'patientAge']}>\n                    <InputNumber\n                      placeholder=\"Возвраст\"\n                      min={1}\n                      max={20}\n                      initialvalue={1}\n                    />\n\n                  </Form.Item> : null}\n            </Form.Item>\n          </> : \"\"}\n          <Form.Item label=\"Год начала врачебной практики\"\n            name={['questionnaire', 'startMedicalPractice']}\n          >\n            <InputNumber\n              initialvalue={1970}\n              min={1970}\n              max={2020}\n            />\n          </Form.Item>\n          <Form.Item label=\"Фото диплома\" name={['questionnaire', 'diploma', 'image']}>\n            <Input className=\"inputFoto\" />\n            <Upload {...propDiplom} status=\"done\"\n              beforeUpload={e => beforeUploadDiplom(e, ['questionnaire', 'diploma', 'image'])}\n            >\n              <Button>\n                <UploadOutlined />\n               Выберите файл\n              </Button>\n            </Upload>\n          </Form.Item>\n\n          {typeAnkete === 3 ?\n            <Form.Item label=\"Расписание работы\" name=\"sedule\">\n              <Input\n                placeholder=\"Расписание работы\"\n                pattern=\"[а-я-А-Я0-9,\\s*]{1,}\"\n              />\n            </Form.Item> : \"\"\n          }\n          {typeAnkete !== 3 ? <>\n            <h3><b>Базовое образование</b></h3>\n            <Form.Item label=\"Год окончания\"\n              name={['questionnaire', 'basicEducation', 'yearStart']}>\n              <InputNumber\n                initialvalue={1970}\n                min={1970}\n                max={2020}\n              />\n            </Form.Item>\n            <Form.Item label=\"Название учреждения\"\n              name={['questionnaire', 'basicEducation', 'institutionName']}>\n              <Input\n                placeholder=\"Название учреждения\"\n                pattern=\"[а-я А-Я]{1,15}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Специализация\"\n              name={['questionnaire', 'basicEducation', 'specialization']}>\n              <Input\n                placeholder=\"Специализация\"\n                pattern=\"[а-я А-Я]{1,15}\"\n\n              />\n            </Form.Item>\n            <Form.Item label=\"Город\" name={['questionnaire', 'basicEducation', 'city']}>\n              <Input\n                placeholder=\"Город\"\n                pattern=\"[а-я-А-Я]{1,15}\"\n              />\n            </Form.Item>\n\n            <h3><b>Интернатура/Ординатура</b></h3>\n            <Form.Item label=\"Год окончания\" name={['questionnaire', 'internshipTraineeship', 'yearEnd']} >\n              <InputNumber\n                initialvalue={1970}\n                min={1970}\n                max={2020}\n\n              />\n            </Form.Item>\n            <Form.Item label=\"Название учреждения\" name={['questionnaire', 'internshipTraineeship', 'institutionName']}>\n              <Input\n                placeholder=\"Название учреждения\"\n                pattern=\"[-а-яА-ЯёЁ №]{1,15}\"\n\n              />\n            </Form.Item>\n            <Form.Item label=\"Специализация\" name={['questionnaire', 'internshipTraineeship', 'specialization']}>\n              <Input\n                placeholder=\"Специализация\"\n                pattern=\"[а-я-А-Я]{1,15}\"\n\n              />\n            </Form.Item>\n            <Form.Item label=\"Город\" name={['questionnaire', 'internshipTraineeship', 'city']}>\n              <Input\n                placeholder=\"Город\"\n                pattern=\"[-а-яА-ЯёЁ]{3,25}\"\n\n              />\n            </Form.Item>\n\n\n            <h3><b>Аспирантура/Докторантура</b></h3>\n            <Form.Item label=\"Год окончания\" name={['questionnaire', 'graduateSchoolDoctorate', 'yearEnd']} >\n              <InputNumber\n                min={1970}\n                maxLength={4}\n                max={2020}\n              />\n            </Form.Item>\n            <Form.Item label=\"Название учреждения\" name={['questionnaire', 'graduateSchoolDoctorate', 'institutionName']}>\n              <Input\n                placeholder=\"Название учреждения\"\n                pattern=\"[-а-яА-ЯёЁ №]{1,15}\"\n\n              />\n            </Form.Item>\n            <Form.Item label=\"Специализация\" name={['questionnaire', 'graduateSchoolDoctorate', 'specialization']}>\n              <Input\n                placeholder=\"Специализация\"\n                pattern=\"[-а-яА-ЯёЁ ]{1,}\"\n\n              />\n            </Form.Item>\n            <Form.Item label=\"Город\" name={['questionnaire', 'graduateSchoolDoctorate', 'city']}>\n              <Input\n                placeholder=\"Город\"\n                pattern=\"[-а-яА-ЯёЁ]{1,15}\"\n              />\n            </Form.Item>\n\n            <h3><b>Действующие сертификаты</b></h3>\n\n            <Form.Item label=\"Сертификат\" name={['questionnaire', 'validCertificates', 'specialization']}\n              rules={[{ required: true, message: 'Добавить сертификат!', whitespace: true }]}\n            >\n              <Input\n                placeholder=\"Название сертификата\"\n                pattern=\"[а-яА-Я]{1,}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Год окончания\" name={['questionnaire', 'validCertificates', 'dateEnd']}\n              rules={[{ required: true }]}\n            >\n              <DatePicker placeholder=\"Год окончания\"\n                format=\"YYYY-MM-DD\" locale={locale}\n              />\n\n            </Form.Item>\n            <Form.Item label=\"Фото сертификата\" name={['questionnaire', 'validCertificatesImage']}>\n              <Input className=\"inputFoto\" />\n              <Upload {...propDiplom} status=\"done\"\n                beforeUpload={(e) => beforeUploadDiplom(e, ['questionnaire', 'validCertificatesImage', 'image'])}\n              >\n                <Button><UploadOutlined />Выберите файл</Button>\n              </Upload>\n            </Form.Item>\n\n            <Form.Item label=\"Врачебная категория\" name={['questionnaire', 'medicalCategory']}>\n              <Input\n                placeholder=\"Врачебная категория\"\n                pattern=\"[а-я-,.А-ЯёЁ\\s]{1,25}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Ученая степень\" name={['questionnaire', 'academicDegree']}>\n              <Input\n                placeholder=\"Ученая степень\"\n                pattern=\"[а-яА-Я]{1,}\"\n              />\n            </Form.Item>\n            <h3><b>Курсы повышения квалификации,семинары, мастерклассы</b></h3>\n\n\n            <Form.Item label=\"Год окончания\" name={['questionnaire', 'refresherCourses', 'yearEnd']}>\n\n              <InputNumber\n                placeholder=\"Год окончания курсов\"\n                pattern=\"[0-9,]{1,}\"\n                maxLength={4}\n                minLength={4}\n\n              />\n            </Form.Item>\n            <Form.Item label=\"Наименования курсов\" name={['questionnaire', 'refresherCourses', 'courseName']}>\n              <Input\n                placeholder=\"Наименование курсов\"\n                pattern=\"[а-яА-Я\\s]{1,}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Наименование учреждения\" name={['questionnaire', 'refresherCourses', 'institutionName']}>\n              <Input\n                placeholder=\"Наименование учреждения\"\n                pattern=\"[-а-яА-Я\\s]{1,}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Специальность\" name={['questionnaire', 'refresherCourses', 'specialization']}>\n              <Input\n                placeholder=\"Специальность\"\n                pattern=\"[а-яА-Я\\s]{1,}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Фото курсов\" name={['questionnaire', 'refresherCoursesImages']} >\n              <Input className=\"inputFoto\" />\n              <Upload {...propDiplom} status=\"done\" beforeUpload={(e) => beforeUploadCurces(e, ['questionnaire', 'refresherCoursesImages'])}\n              >\n                <Button><UploadOutlined />Выберите файл\n                    </Button>\n              </Upload>\n            </Form.Item>\n            <Form.Item label=\"Членство в професиональных организациях\"\n              name={['questionnaire', 'tradeUnionMembership']}\n            >\n              <Input\n                placeholder=\"Наименование организации\"\n                pattern=\"[а-яА-ЯёЁ,.:- ]{1,50}\"\n              />\n            </Form.Item>\n\n            <Form.Item label=\"Опыт работы\" name={['questionnaire', 'experience']} >\n              <TextArea rows={7} showCount maxLength={1000}\n                placeholder=\"Год начала, год окончания, наименование организации, специальность\"\n                pattern=\"[а-яА-ЯёЁ,- \\s]{1,}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Награды\" name={['questionnaire', 'awards']}>\n              <Input\n                placeholder=\"Награды\"\n                pattern=\"[а-яА-Я\\s]{1,}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Фиксированые достижения\" name={['questionnaire', 'fixedAchievements']}>\n              <Input\n                placeholder=\"Фиксированые достижения\"\n                pattern=\"[а-яА-Я\\s]{1,}\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Научная деятельность\" name={['questionnaire', 'scientificActivity']}>\n              <Input\n                placeholder=\"Научная деятельность\"\n                pattern=\"[а-яА-Я\\s]{1,}\"\n              />\n            </Form.Item>\n          </> : null}\n          <Form.Item label=\"Описание\" name={['questionnaire', 'description']} >\n            <TextArea rows={5} showCount maxLength={1000}\n              placeholder=\"научная деятельность и прочие достижения\"\n              pattern=\"[а-яА-ЯёЁ,-:\\s]{1,1000}\"\n              title=\"не более 1000 символов\"\n            />\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}\n            name=\"agreement\"\n            valuePropName=\"checked\"\n            rules={[\n              {\n                validator: (_, value) =>\n                  value ? Promise.resolve() : Promise.reject(new Error('Вы должны принять соглашение')),\n              },\n            ]}\n          >\n            <Checkbox>Согласен на обработку персональных данных</Checkbox>\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Сохранить\n            </Button>\n          </Form.Item>\n        </Form>\n        : typeAnkete === 4 ? <AddAnketa /> : null}\n\n    </div>\n  );\n}\nexport default Anketa;","import 'antd/dist/antd.css';\nimport '../App.css';\nimport axios from 'axios'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Input, Form, message } from 'antd';\nimport { useState } from 'react';\n\n\nfunction SignToProf() {\n  let history = useHistory()\n  const [form] = Form.useForm()\n  const [phone, setPhone] = useState(\"\")\n  const [snils, setSnils] = useState(\"\")\n  \n  function Authorization() {\n    axios({\n      method: 'post',\n      url: 'http://localhost:8099/api/oauth/token',\n      data: { username: 7 + phone.replace(\"-\", \"\"), password: snils }\n    })\n      .then(res => {\n        localStorage.setItem('token', res.data.token);\n        history.push(`/editanketa?member=${phone}`)\n      })\n      .catch(error => {\n        message.warn({ content: \"Проверьте корректность введенных данных и попробуйте еще раз.\" });\n        history.push('/signToprof');\n        setPhone(\"\");\n        setSnils(\"\");\n      })\n  }\n  const onChange = e => {\n    const { value } = e.target;\n    const reg = /^-?[0-9]*(\\.[0-9]*)?$/;\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n      setPhone(value);\n    }\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n      lg: { span: 6 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n      lg: { span: 18 }\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n      lg: {\n        span: 16,\n        offset: 6,\n      }\n    },\n  };\n  return (\n    <div className=\"App\">\n      <Link to=\"/\" className=\"App-header\" title=\"на главную\"></Link>\n      <header className=\"App-header\" />\n      <p>После авторизации вам будет доступно изменение данных заполненных на\n        первом этапе. А также ряд полей которые были изначально недоступны.\n      </p>\n        <Form layout=\"horizontal\" onFinish={Authorization} form={form} {...formItemLayout}>\n          <Form.Item label=\"* Телефон\">\n            <Input allowClear\n             \n              placeholder=\"XXX-XXX-XX-XX\"\n              title=\"10 цифр без пробелов\"\n              addonBefore=\"+7\"\n              maxLength={10}\n              onChange={onChange}\n              required\n              value={phone.replace(/(\\d\\d\\d)(\\d\\d\\d)(\\d\\d)(\\d\\d)/g, '$1-$2-$3-$4')}\n              pattern=\"[0-9^а-я]{3}-[0-9^а-я]{3}-[0-9^a-z]{2}-[0-9]{2}\"\n            \n            />\n          </Form.Item>\n          <Form.Item label=\"* Снилс\" >\n            <Input.Password  allowClear\n              required             \n              maxLength={11}\n              placeholder=\"XXX-XXX-XXX XX\"\n              title=\"11 цифр без пробелов\"\n              value={snils.replace(/(\\d\\d\\d)(\\d\\d\\d)(\\d\\d\\d)(\\d\\d)/g, '$1-$2-$3 $4')}\n              type=\"password\"\n              pattern=\"[0-9^\\w]{3}-[0-9]{3}-[0-9]{3} [0-9]{2}\"\n              onChange={(e) => setSnils(e.target.value)}\n            />\n          </Form.Item>\n         \n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Войти\n            </Button>\n          </Form.Item>\n        </Form>\n     \n    </div>\n  );\n}\n\nexport default SignToProf;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport newAnketa from './pages/newAnketa';\nimport Anketa from './pages/anketa';\nimport SignToProf from './pages/signin';\n\nReactDOM.render( \n    <BrowserRouter>\n      <Route path=\"/\" exact component={App} />\n      <Route path=\"/editanketa\" component={Anketa} /> \n      <Route path=\"/newanketa\" component={newAnketa} />       \n      <Route path=\"/signToprof\" component={SignToProf} />\n    </BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}